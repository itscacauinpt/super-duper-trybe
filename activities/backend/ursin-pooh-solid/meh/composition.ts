// Crie uma interface Logger.
// Logger deve possuir um m√©todo log, que recebe um par√¢metro do tipo string e n√£o retorna nada (void).
interface Logger {
  log(param: string): void, 
}

// Crie uma classe ConsoleLogger que implementa Logger.
// Voc√™ deve imaginar como o m√©todo log deve ser implementado, n√©? üòÅ.
class ConsoleLogger implements Logger {
  public log(value: string): void {
    console.log('ConsoleLogger --> ' + value);
  };
}
// const aLogin = new ConsoleLogger();
// console.log(aLogin);

// Crie uma classe ConsoleLogger2 igual √† classe anterior, apenas a t√≠tulo de exemplo.
// No console.log dentro do m√©todo log, diferencie o ConsoleLogger2 do ConsoleLogger.
class ConsoleLogger2 implements Logger {
  public log(value: string): void {
    console.log('ConsoleLogger2 --> ' + value);
  };
}
// const aLogin2 = new ConsoleLogger2();
// console.log(aLogin2);

// Crie uma interface Database.
// Database deve possuir um atributo do tipo Logger.
// Database deve possuir um m√©todo save, que recebe dois par√¢metros,
// key e value, ambos strings, e n√£o retorna nada (void).
interface Database {
  logger: Logger;
  save(key: string, value: string): void;
}

// Crie uma classe ExampleDatabase que implementa Database.
// ExampleDatabase deve receber o Logger como par√¢metro do construtor,
// e possuir como valor padr√£o um ConsoleLogger.
// Dentro do m√©todo save, chame a fun√ß√£o log do Logger passado para o database
// para fazer o log dos par√¢metros passados para a save.
class ExampleDatabase implements Database {
  constructor(public logger: Logger = new ConsoleLogger()) {}

  public save(key: string, value: string): void {
    this.logger.log(`${key} - ${value}`);
  }
}

// Crie um objeto de cada um dos Loggers.
const aLogin = new ConsoleLogger();
const aLogin2 = new ConsoleLogger2();

// Crie tr√™s objetos da ExampleDatabase, cada um dos dois primeiros
// recebendo um dos Loggers, e o √∫ltimo n√£o recebendo nenhum.
const a = new ExampleDatabase(); // padr√£o
const b = new ExampleDatabase(aLogin);
const c = new ExampleDatabase(aLogin2);

// Utilize todos eles para salvar um conte√∫do fict√≠cio.
a.save('A', '1');
b.save('B', '2');
c.save('C', '3');
